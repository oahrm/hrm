<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hrm.oa.dao.ReJobRequirementsDao">
  <resultMap id="BaseResultMap" type="com.hrm.oa.entity.ReJobRequirementsEntity">
    <id column="job_id" jdbcType="VARCHAR" property="jobId" />
    <result column="job_name" jdbcType="VARCHAR" property="jobName" />
    <result column="demand_num" jdbcType="INTEGER" property="demandNum" />
    <result column="applicant" jdbcType="VARCHAR" property="applicant" />
    <result column="application_dept" jdbcType="VARCHAR" property="applicationDept" />
    <result column="application_time" jdbcType="TIMESTAMP" property="applicationTime" />
    <result column="source" jdbcType="VARCHAR" property="source" />
    <result column="reason" jdbcType="VARCHAR" property="reason" />
    <result column="nature_of_work" jdbcType="VARCHAR" property="natureOfWork" />
    <result column="job_responsibilities" jdbcType="VARCHAR" property="jobResponsibilities" />
    <result column="education" jdbcType="VARCHAR" property="education" />
    <result column="work_experience" jdbcType="VARCHAR" property="workExperience" />
    <result column="place_of_work" jdbcType="VARCHAR" property="placeOfWork" />
    <result column="lower_age_limit" jdbcType="INTEGER" property="lowerAgeLimit" />
    <result column="upper_age_limit" jdbcType="INTEGER" property="upperAgeLimit" />
    <result column="Salary_floor" jdbcType="DECIMAL" property="salaryFloor" />
    <result column="salary_cap" jdbcType="DECIMAL" property="salaryCap" />
    <result column="major" jdbcType="VARCHAR" property="major" />
    <result column="english_level" jdbcType="INTEGER" property="englishLevel" />
    <result column="other" jdbcType="VARCHAR" property="other" />
    <result column="stats" jdbcType="INTEGER" property="stats" />
  </resultMap>
  <sql id="Base_Column_List">
    job_id, job_name, demand_num, applicant, application_dept, application_time, `source`, 
    reason, nature_of_work, job_responsibilities, education, work_experience, place_of_work, 
    lower_age_limit, upper_age_limit, Salary_floor, salary_cap, major, english_level, 
    other, stats
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from re_job_requirements
    where job_id = #{jobId,jdbcType=VARCHAR}
  </select>

  <!--岗位需求人数-->
  <select id="demandNumsum"  resultType="java.lang.Integer">
    SELECT sum(demand_num) from re_job_requirements
  </select>


  <!--岗位数-->
  <select id="sumdemand"  resultType="java.lang.Integer">
    SELECT count(demand_num) from re_job_requirements
  </select>

  <!--查询全部-->
  <select id="findAll"  resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from re_job_requirements
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from re_job_requirements
    where job_id = #{jobId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" keyColumn="job_id" keyProperty="jobId" parameterType="com.hrm.oa.entity.ReJobRequirementsEntity" useGeneratedKeys="true">
    insert into re_job_requirements (job_id,job_name, demand_num, applicant,
      application_dept, application_time, `source`, 
      reason, nature_of_work, job_responsibilities, 
      education, work_experience, place_of_work, 
      lower_age_limit, upper_age_limit, Salary_floor, 
      salary_cap, major, english_level, 
      other, stats)
    values (#{jobId,jdbcType=VARCHAR},#{jobName,jdbcType=VARCHAR}, #{demandNum,jdbcType=INTEGER}, #{applicant,jdbcType=VARCHAR},
      #{applicationDept,jdbcType=VARCHAR}, #{applicationTime,jdbcType=TIMESTAMP}, #{source,jdbcType=VARCHAR}, 
      #{reason,jdbcType=VARCHAR}, #{natureOfWork,jdbcType=VARCHAR}, #{jobResponsibilities,jdbcType=VARCHAR}, 
      #{education,jdbcType=VARCHAR}, #{workExperience,jdbcType=VARCHAR}, #{placeOfWork,jdbcType=VARCHAR}, 
      #{lowerAgeLimit,jdbcType=INTEGER}, #{upperAgeLimit,jdbcType=INTEGER}, #{salaryFloor,jdbcType=DECIMAL}, 
      #{salaryCap,jdbcType=DECIMAL}, #{major,jdbcType=VARCHAR}, #{englishLevel,jdbcType=INTEGER}, 
      #{other,jdbcType=VARCHAR}, #{stats,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" keyColumn="job_id" keyProperty="jobId" parameterType="com.hrm.oa.entity.ReJobRequirementsEntity" useGeneratedKeys="true">
    insert into re_job_requirements
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        job_name,
      </if>
      <if test="demandNum != null">
        demand_num,
      </if>
      <if test="applicant != null">
        applicant,
      </if>
      <if test="applicationDept != null">
        application_dept,
      </if>
      <if test="applicationTime != null">
        application_time,
      </if>
      <if test="source != null">
        `source`,
      </if>
      <if test="reason != null">
        reason,
      </if>
      <if test="natureOfWork != null">
        nature_of_work,
      </if>
      <if test="jobResponsibilities != null">
        job_responsibilities,
      </if>
      <if test="education != null">
        education,
      </if>
      <if test="workExperience != null">
        work_experience,
      </if>
      <if test="placeOfWork != null">
        place_of_work,
      </if>
      <if test="lowerAgeLimit != null">
        lower_age_limit,
      </if>
      <if test="upperAgeLimit != null">
        upper_age_limit,
      </if>
      <if test="salaryFloor != null">
        Salary_floor,
      </if>
      <if test="salaryCap != null">
        salary_cap,
      </if>
      <if test="major != null">
        major,
      </if>
      <if test="englishLevel != null">
        english_level,
      </if>
      <if test="other != null">
        other,
      </if>
      <if test="stats != null">
        stats,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="jobName != null">
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="demandNum != null">
        #{demandNum,jdbcType=INTEGER},
      </if>
      <if test="applicant != null">
        #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicationDept != null">
        #{applicationDept,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        #{applicationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="source != null">
        #{source,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        #{reason,jdbcType=VARCHAR},
      </if>
      <if test="natureOfWork != null">
        #{natureOfWork,jdbcType=VARCHAR},
      </if>
      <if test="jobResponsibilities != null">
        #{jobResponsibilities,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        #{education,jdbcType=VARCHAR},
      </if>
      <if test="workExperience != null">
        #{workExperience,jdbcType=VARCHAR},
      </if>
      <if test="placeOfWork != null">
        #{placeOfWork,jdbcType=VARCHAR},
      </if>
      <if test="lowerAgeLimit != null">
        #{lowerAgeLimit,jdbcType=INTEGER},
      </if>
      <if test="upperAgeLimit != null">
        #{upperAgeLimit,jdbcType=INTEGER},
      </if>
      <if test="salaryFloor != null">
        #{salaryFloor,jdbcType=DECIMAL},
      </if>
      <if test="salaryCap != null">
        #{salaryCap,jdbcType=DECIMAL},
      </if>
      <if test="major != null">
        #{major,jdbcType=VARCHAR},
      </if>
      <if test="englishLevel != null">
        #{englishLevel,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        #{other,jdbcType=VARCHAR},
      </if>
      <if test="stats != null">
        #{stats,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hrm.oa.entity.ReJobRequirementsEntity">
    update re_job_requirements
    <set>
      <if test="jobName != null">
        job_name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="demandNum != null">
        demand_num = #{demandNum,jdbcType=INTEGER},
      </if>
      <if test="applicant != null">
        applicant = #{applicant,jdbcType=VARCHAR},
      </if>
      <if test="applicationDept != null">
        application_dept = #{applicationDept,jdbcType=VARCHAR},
      </if>
      <if test="applicationTime != null">
        application_time = #{applicationTime,jdbcType=TIMESTAMP},
      </if>
      <if test="source != null">
        `source` = #{source,jdbcType=VARCHAR},
      </if>
      <if test="reason != null">
        reason = #{reason,jdbcType=VARCHAR},
      </if>
      <if test="natureOfWork != null">
        nature_of_work = #{natureOfWork,jdbcType=VARCHAR},
      </if>
      <if test="jobResponsibilities != null">
        job_responsibilities = #{jobResponsibilities,jdbcType=VARCHAR},
      </if>
      <if test="education != null">
        education = #{education,jdbcType=VARCHAR},
      </if>
      <if test="workExperience != null">
        work_experience = #{workExperience,jdbcType=VARCHAR},
      </if>
      <if test="placeOfWork != null">
        place_of_work = #{placeOfWork,jdbcType=VARCHAR},
      </if>
      <if test="lowerAgeLimit != null">
        lower_age_limit = #{lowerAgeLimit,jdbcType=INTEGER},
      </if>
      <if test="upperAgeLimit != null">
        upper_age_limit = #{upperAgeLimit,jdbcType=INTEGER},
      </if>
      <if test="salaryFloor != null">
        Salary_floor = #{salaryFloor,jdbcType=DECIMAL},
      </if>
      <if test="salaryCap != null">
        salary_cap = #{salaryCap,jdbcType=DECIMAL},
      </if>
      <if test="major != null">
        major = #{major,jdbcType=VARCHAR},
      </if>
      <if test="englishLevel != null">
        english_level = #{englishLevel,jdbcType=INTEGER},
      </if>
      <if test="other != null">
        other = #{other,jdbcType=VARCHAR},
      </if>
      <if test="stats != null">
        stats = #{stats,jdbcType=INTEGER},
      </if>
    </set>
    where job_id = #{jobId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hrm.oa.entity.ReJobRequirementsEntity">
    update re_job_requirements
    set job_name = #{jobName,jdbcType=VARCHAR},
      demand_num = #{demandNum,jdbcType=INTEGER},
      applicant = #{applicant,jdbcType=VARCHAR},
      application_dept = #{applicationDept,jdbcType=VARCHAR},
      application_time = #{applicationTime,jdbcType=TIMESTAMP},
      `source` = #{source,jdbcType=VARCHAR},
      reason = #{reason,jdbcType=VARCHAR},
      nature_of_work = #{natureOfWork,jdbcType=VARCHAR},
      job_responsibilities = #{jobResponsibilities,jdbcType=VARCHAR},
      education = #{education,jdbcType=VARCHAR},
      work_experience = #{workExperience,jdbcType=VARCHAR},
      place_of_work = #{placeOfWork,jdbcType=VARCHAR},
      lower_age_limit = #{lowerAgeLimit,jdbcType=INTEGER},
      upper_age_limit = #{upperAgeLimit,jdbcType=INTEGER},
      Salary_floor = #{salaryFloor,jdbcType=DECIMAL},
      salary_cap = #{salaryCap,jdbcType=DECIMAL},
      major = #{major,jdbcType=VARCHAR},
      english_level = #{englishLevel,jdbcType=INTEGER},
      other = #{other,jdbcType=VARCHAR},
      stats = #{stats,jdbcType=INTEGER}
    where job_id = #{jobId,jdbcType=VARCHAR}
  </update>
</mapper>